apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply from: '../code_quality_tools/jacoco.gradle'
apply from: '../code_quality_tools/findbugs.gradle'
apply from: '../code_quality_tools/checkstyle.gradle'
apply from: '../code_quality_tools/pmd.gradle'

def globalConf = rootProject.ext
android {

    compileSdkVersion rootProject.androidCompileSdkVersion
    buildToolsVersion rootProject.androidBuildToolsVersion

    signingConfigs {
        debug {
            storeFile file(globalConf.debugKeystore)
            storePassword globalConf.debugKeystorePass
            keyAlias globalConf.debugAlias
            keyPassword globalConf.debugAliasPass
        }

        release {
            storeFile file(globalConf.keystore)
            storePassword globalConf.keystorePass
            keyAlias globalConf.alias
            keyPassword globalConf.aliasPass
        }

        oldRelease {
            storeFile file(globalConf.keystore)
            storePassword globalConf.keystorePass
            keyAlias globalConf.oldAlias
            keyPassword globalConf.oldAliasPass
        }
    }

    defaultConfig {
        applicationId "org.stepic.droid"
        minSdkVersion rootProject.androidMinSdkVersion
        targetSdkVersion rootProject.androidTargetSdkVersion
        versionCode 177
        versionName "1.44.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    productFlavors {
        sb {
            applicationIdSuffix '.sb'
        }
        classic {
        }
    }

    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride = android.defaultConfig.versionCode * 10
        }
    }

    // delete unaligned files
    android.applicationVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.each { output ->
                File unaligned = output.packageApplication.outputFile;
                File aligned = output.outputFile
                if (!unaligned.getName().equalsIgnoreCase(aligned.getName())) {
                    println "deleting " + unaligned.getName()
                    unaligned.delete()
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        warningsAsErrors false // after fixing existing errors set to true for fixing warnings
        abortOnError false // after fixing existing errors set to true for failing fast
        lintConfig rootProject.file('lint.xml')
        htmlOutput rootProject.file("reports/lint/lint.html")
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            useProguard true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro', 'proguard-rules-dev.pro'
            versionNameSuffix "DEV"

            testCoverageEnabled = true
        }

        //the apk of this type is signed by old prod keys
        //it makes apk testable (sign in, smart lock, etc are worked).
        //now new sign configs are used for providing to Google Play
        //assemble with oldProd on release/* branches
        oldRelease {
            initWith release
            signingConfig signingConfigs.oldRelease
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

kapt {
    generateStubs = true
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile fileTree(dir: 'libs', include: ['*.jar'])

    //<DI>
    compile 'com.google.dagger:dagger:2.10'
    kapt 'com.google.dagger:dagger-compiler:2.10'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    //needed to resolve compilation errors, thanks to tutplus.org for finding the dependency

    compile 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    //</DI>

    compile 'com.google.code.gson:gson:2.7'

    compile 'de.hdodenhof:circleimageview:2.1.0'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    compile 'joda-time:joda-time:2.8'
    compile 'org.joda:joda-convert:1.3.1'

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    // AppMetrica from maven central. Protobuf will be included as dependency.
    compile 'com.yandex.android:mobmetricalib:2.62'

    compile 'jp.wasabeef:recyclerview-animators:2.1.0'

    compile 'uk.co.chrisjenx:calligraphy:2.1.0'

    compile 'me.zhanghai.android.materialprogressbar:library:1.1.6'

    compile 'org.jsoup:jsoup:1.8.3'

    compile "com.google.firebase:firebase-messaging:${rootProject.firebaseVersion}"
    compile "com.google.firebase:firebase-appindexing:${rootProject.firebaseVersion}"
    compile "com.google.android.gms:play-services-auth:${rootProject.firebaseVersion}"
    compile "com.google.firebase:firebase-core:${rootProject.firebaseVersion}"
    compile "com.google.firebase:firebase-crash:${rootProject.firebaseVersion}"
    compile "com.google.firebase:firebase-config:${rootProject.firebaseVersion}"

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.facebook.android:facebook-android-sdk:4.17.0'
    compile 'com.vk:androidsdk:1.6.5'
    compile 'com.jakewharton.timber:timber:4.5.1'

    compile 'com.github.javiersantos:MaterialStyledDialogs:2.0'
    compile 'biz.kasual:materialnumberpicker:1.2.1'

    compile 'com.github.chrisbanes:PhotoView:1.3.1'

    compile 'com.github.h6ah4i:android-advancedrecyclerview:develop-SNAPSHOT'

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile project(':androidsvg')

    compile 'com.facebook.stetho:stetho:1.4.2'
    compile 'com.facebook.stetho:stetho-okhttp3:1.4.2'

    //add exo player for video (change playback speed supported)
    compile 'com.google.android.exoplayer:exoplayer-core:r2.5.3'

    oldReleaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakCanaryVersion}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakCanaryVersion}"
    androidTestCompile "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakCanaryVersion}"
    debugCompile "com.squareup.leakcanary:leakcanary-android:${rootProject.leakCanaryVersion}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakCanaryVersion}"

    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    // Optional -- Mockito framework
    testCompile 'org.mockito:mockito-core:2.7.21'

    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'

    androidTestCompile 'com.android.support:support-annotations:26.1.0'

    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude group: 'com.android.support'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.2') {
        exclude group: 'com.android.support'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2.2') {
        exclude group: 'com.android.support'
    }

}

repositories {
    jcenter()
    maven {
        url "https://jitpack.io"
    }
    mavenCentral()
}
apply plugin: 'com.google.gms.google-services'
